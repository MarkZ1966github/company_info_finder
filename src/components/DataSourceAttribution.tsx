import React from 'react';\n\ntype DataSource = 'Wikipedia' | 'YahooFinance' | 'CompanyWebsite' | 'SECEDGAR' | 'NewsAPI' | 'MockData' | 'Algorithmic Estimate' | 'Error Fallback' | 'Combined' | string;\n\ninterface DataSourceProps {\n  sources: Record<string, DataSource>;\n}\n\nconst DataSourceAttribution: React.FC<DataSourceProps> = ({ sources }) => {\n  if (!sources || Object.keys(sources).length === 0) {\n    return null;\n  }\n  \n  // Group sources by source type\n  const sourceGroups: Record<string, string[]> = {};\n  \n  Object.entries(sources).forEach(([field, source]) => {\n    // Skip the _all field\n    if (field === '_all') {\n      sourceGroups[source] = ['All data'];\n      return;\n    }\n    \n    if (!sourceGroups[source]) {\n      sourceGroups[source] = [];\n    }\n    \n    // Format the field name for display\n    let displayField = field;\n    if (field.includes('.')) {\n      // Convert dot notation to more readable format\n      displayField = field.split('.').pop() || field;\n    }\n    \n    sourceGroups[source].push(displayField);\n  });\n  \n  return (\n    <div className=\"mt-4 p-3 bg-gray-100 rounded-md text-xs\">\n      <h4 className=\"font-semibold mb-1\">Data Sources:</h4>\n      <div className=\"space-y-1\">\n        {Object.entries(sourceGroups).map(([source, fields], index) => (\n          <div key={index} className=\"flex\">\n            <span className=\"font-medium mr-2\">{source}:</span>\n            <span className=\"text-gray-600\">{fields.join(', ')}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-2 text-gray-500 italic text-xs\">\n        Data is sourced from public information and may not be complete or up-to-date.\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceAttribution;